(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["utils/Enum/demo"],{

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./docs/utils/Enum/demo/basic.md":
/*!*******************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./docs/utils/Enum/demo/basic.md ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
  "content": [

  ],
  "meta": {
    "component": false,
    "filename": "docs/utils/Enum/demo/basic.md",
    "id": "docs-utils-Enum-demo-basic"
  },
  "toc": [
    "ul"
  ],
  "highlightedCode": [
    "pre",
    {
      "lang": "jsx",
      "highlighted": "<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>utils<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'baidu-aibp-react-common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>Enum<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> utils<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> STATUS <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Enum</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span>alias<span class=\"token punctuation\">:</span> <span class=\"token string\">'ERROR'</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">:</span> <span class=\"token string\">'错误'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>alias<span class=\"token punctuation\">:</span> <span class=\"token string\">'SUCCESS'</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">:</span> <span class=\"token string\">'成功'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'success'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 1. alias 和 value 相互映射</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span>ERROR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// \"error\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// \"ERROR\"</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 2. addItem()</span>\nSTATUS<span class=\"token punctuation\">.</span><span class=\"token function\">addItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>alias<span class=\"token punctuation\">:</span> <span class=\"token string\">'RUNNING'</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">:</span> <span class=\"token string\">'运行中'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'running'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span>RUNNING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// \"running\"</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 3. fromValue()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span><span class=\"token function\">fromValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// {alias: \"ERROR\", text: \"错误\", value: \"error\"}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 4. fromAlias()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span><span class=\"token function\">fromAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ERROR'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// {alias: \"ERROR\", text: \"错误\", value: \"error\"}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 5. fromText()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span><span class=\"token function\">fromText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'错误'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// {alias: \"ERROR\", text: \"错误\", value: \"error\"}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 6. getTextFromValue()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span><span class=\"token function\">getTextFromValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// \"错误\"</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 7. getTextFromAlias()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span><span class=\"token function\">getTextFromAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ERROR'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// \"错误\"</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 8. getValueFromAlias()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span><span class=\"token function\">getValueFromAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ERROR'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// \"error\"</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 9. getValueFromText()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span><span class=\"token function\">getValueFromText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'错误'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// \"error\"</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 10. getAliasFromValue()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span><span class=\"token function\">getAliasFromValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// \"ERROR\"</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 11. getAliasFromText()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span><span class=\"token function\">getAliasFromText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'错误'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// \"ERROR\"</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 12. toJson()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">// {</span>\n<span class=\"token comment\" spellcheck=\"true\">//     error: \"错误\",</span>\n<span class=\"token comment\" spellcheck=\"true\">//     success: \"成功\",</span>\n<span class=\"token comment\" spellcheck=\"true\">//     running: \"运行中\"</span>\n<span class=\"token comment\" spellcheck=\"true\">// }</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 13. toArray()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>STATUS<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">// [</span>\n<span class=\"token comment\" spellcheck=\"true\">//     {alias: 'ERROR', text: '错误', value: 'error'},</span>\n<span class=\"token comment\" spellcheck=\"true\">//     {alias: 'SUCCESS', text: '成功', value: 'success'},</span>\n<span class=\"token comment\" spellcheck=\"true\">//     {alias: 'RUNNING', text: '运行中', value: 'running'}</span>\n<span class=\"token comment\" spellcheck=\"true\">// ]</span>"
    }
  ],
  "highlightedCodes": {
    "jsx": "<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>utils<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'baidu-aibp-react-common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>Enum<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> utils<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">STATUS</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Enum</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span>alias<span class=\"token operator\">:</span> <span class=\"token string\">'ERROR'</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'错误'</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>alias<span class=\"token operator\">:</span> <span class=\"token string\">'SUCCESS'</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'成功'</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">'success'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 1. alias 和 value 相互映射</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"error\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"ERROR\"</span>\n\n<span class=\"token comment\">// 2. addItem()</span>\n<span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token function\">addItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>alias<span class=\"token operator\">:</span> <span class=\"token string\">'RUNNING'</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'运行中'</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">'running'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RUNNING</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"running\"</span>\n\n<span class=\"token comment\">// 3. fromValue()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {alias: \"ERROR\", text: \"错误\", value: \"error\"}</span>\n\n<span class=\"token comment\">// 4. fromAlias()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ERROR'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {alias: \"ERROR\", text: \"错误\", value: \"error\"}</span>\n\n<span class=\"token comment\">// 5. fromText()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'错误'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {alias: \"ERROR\", text: \"错误\", value: \"error\"}</span>\n\n<span class=\"token comment\">// 6. getTextFromValue()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTextFromValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"错误\"</span>\n\n<span class=\"token comment\">// 7. getTextFromAlias()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTextFromAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ERROR'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"错误\"</span>\n\n<span class=\"token comment\">// 8. getValueFromAlias()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token function\">getValueFromAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ERROR'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"error\"</span>\n\n<span class=\"token comment\">// 9. getValueFromText()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token function\">getValueFromText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'错误'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"error\"</span>\n\n<span class=\"token comment\">// 10. getAliasFromValue()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAliasFromValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"ERROR\"</span>\n\n<span class=\"token comment\">// 11. getAliasFromText()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAliasFromText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'错误'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"ERROR\"</span>\n\n<span class=\"token comment\">// 12. toJson()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// {</span>\n<span class=\"token comment\">//     error: \"错误\",</span>\n<span class=\"token comment\">//     success: \"成功\",</span>\n<span class=\"token comment\">//     running: \"运行中\"</span>\n<span class=\"token comment\">// }</span>\n\n<span class=\"token comment\">// 13. toArray()</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATUS</span><span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [</span>\n<span class=\"token comment\">//     {alias: 'ERROR', text: '错误', value: 'error'},</span>\n<span class=\"token comment\">//     {alias: 'SUCCESS', text: '成功', value: 'success'},</span>\n<span class=\"token comment\">//     {alias: 'RUNNING', text: '运行中', value: 'running'}</span>\n<span class=\"token comment\">// ]</span>"
  },
  "preview": function bishengPluginReactPreviewer() {
  var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");

  var ReactDOM = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");

  var _baiduAibpReactCommon = __webpack_require__(/*! baidu-aibp-react-common */ "./src/index.ts");

  var Enum = _baiduAibpReactCommon.utils.Enum;
  var STATUS = new Enum({
    alias: 'ERROR',
    text: '错误',
    value: 'error'
  }, {
    alias: 'SUCCESS',
    text: '成功',
    value: 'success'
  }); // 1. alias 和 value 相互映射

  console.log(STATUS.ERROR); // "error"

  console.log(STATUS.error); // "ERROR"
  // 2. addItem()

  STATUS.addItem({
    alias: 'RUNNING',
    text: '运行中',
    value: 'running'
  });
  console.log(STATUS.RUNNING); // "running"
  // 3. fromValue()

  console.log(STATUS.fromValue('error')); // {alias: "ERROR", text: "错误", value: "error"}
  // 4. fromAlias()

  console.log(STATUS.fromAlias('ERROR')); // {alias: "ERROR", text: "错误", value: "error"}
  // 5. fromText()

  console.log(STATUS.fromText('错误')); // {alias: "ERROR", text: "错误", value: "error"}
  // 6. getTextFromValue()

  console.log(STATUS.getTextFromValue('error')); // "错误"
  // 7. getTextFromAlias()

  console.log(STATUS.getTextFromAlias('ERROR')); // "错误"
  // 8. getValueFromAlias()

  console.log(STATUS.getValueFromAlias('ERROR')); // "error"
  // 9. getValueFromText()

  console.log(STATUS.getValueFromText('错误')); // "error"
  // 10. getAliasFromValue()

  console.log(STATUS.getAliasFromValue('error')); // "ERROR"
  // 11. getAliasFromText()

  console.log(STATUS.getAliasFromText('错误')); // "ERROR"
  // 12. toJson()

  console.log(STATUS.toJson()); // {
  //     error: "错误",
  //     success: "成功",
  //     running: "运行中"
  // }
  // 13. toArray()

  console.log(STATUS.toArray()); // [
  //     {alias: 'ERROR', text: '错误', value: 'error'},
  //     {alias: 'SUCCESS', text: '成功', value: 'success'},
  //     {alias: 'RUNNING', text: '运行中', value: 'running'}
  // ]
}
};

/***/ }),

/***/ "./node_modules/bisheng/tmp/utils-Enum-demo.index.js":
/*!***********************************************************!*\
  !*** ./node_modules/bisheng/tmp/utils-Enum-demo.index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
    'basic': __webpack_require__(/*! ./node_modules/bisheng/lib/loaders/source-loader!./docs/utils/Enum/demo/basic.md */ "./node_modules/bisheng/lib/loaders/source-loader.js!./docs/utils/Enum/demo/basic.md"),
}

/***/ })

}]);
//# sourceMappingURL=demo.js.map