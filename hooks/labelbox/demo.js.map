{"version":3,"sources":["webpack:///./docs/hooks/labelbox/demo/basic.md","webpack:///./node_modules/bisheng/tmp/hooks-labelbox-demo.index.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6LAA6L,wFAAwF,8MAA8M,gIAAgI,wFAAwF,oGAAoG,kJAAkJ,gKAAgK,qDAAqD,wFAAwF,uFAAuF,uDAAuD,6FAA6F,gNAAgN,oJAAoJ,UAAU,iaAAia,+aAA+a,4CAA4C,0CAA0C,wEAAwE,qJAAqJ,yZAAyZ,0CAA0C,8IAA8I,sZAAsZ,0CAA0C,iJAAiJ,6ZAA6Z,0CAA0C,8IAA8I,6IAA6I,0CAA0C,+PAA+P,2kBAA2kB,mdAAmd,wZAAwZ,4LAA4L,yPAAyP,mJAAmJ,uPAAuP,6cAA6c,oOAAoO,4LAA4L,2PAA2P,mJAAmJ,uPAAuP,mJAAmJ,6SAA6S,gXAAgX,wDAAwD,0CAA0C,oDAAoD,qUAAqU,0PAA0P,kGAAkG,0PAA0P,kGAAkG,2PAA2P,kGAAkG,2PAA2P,6RAA6R,sFAAsF,2VAA2V,+kBAA+kB,8XAA8X,+nDAA+nD,oFAAoF,2SAA2S,keAAke,8WAA8W,ocAAoc,6nBAA6nB,+3BAA+3B,mGAAmG,oDAAoD,8WAA8W,0UAA0U,qWAAqW,mMAAmM,oQAAoQ,iPAAiP,6MAA6M,mTAAmT,2SAA2S,oFAAoF,wDAAwD,u0BAAu0B,iVAAiV,0IAA0I,oFAAoF,iRAAiR,4UAA4U,oKAAoK,KAAK,iOAAiO,oKAAoK,KAAK,kLAAkL,6NAA6N,oFAAoF,4DAA4D,wDAAwD,+cAA+c,6cAA6c,8NAA8N,8HAA8H,0HAA0H,wDAAwD,6GAA6G,oDAAoD,oFAAoF,gDAAgD,mNAAmN,6FAA6F,wLAAwL,mPAAmP,wJAAwJ,+JAA+J,8FAA8F,wDAAwD,6FAA6F,yHAAyH,4CAA4C,0CAA0C,6OAA6O,uMAAuM;AACzu2B;AACA;AACA;AACA,mLAAmL,wFAAwF,8MAA8M,gIAAgI,wFAAwF,oGAAoG,kJAAkJ,4IAA4I,qDAAqD,wFAAwF,uFAAuF,uDAAuD,6FAA6F,4LAA4L,iJAAiJ,UAAU,wZAAwZ,saAAsa,4CAA4C,0CAA0C,oDAAoD,qJAAqJ,gZAAgZ,0CAA0C,8IAA8I,6YAA6Y,0CAA0C,iJAAiJ,oZAAoZ,0CAA0C,8IAA8I,0IAA0I,0CAA0C,2OAA2O,0hBAA0hB,iZAAiZ,8XAA8X,qKAAqK,mPAAmP,gJAAgJ,iPAAiP,ocAAoc,iOAAiO,qKAAqK,qPAAqP,gJAAgJ,iPAAiP,gJAAgJ,mWAAmW,gXAAgX,wDAAwD,0CAA0C,oDAAoD,8SAA8S,oPAAoP,kGAAkG,oPAAoP,kGAAkG,qPAAqP,kGAAkG,qPAAqP,sQAAsQ,sFAAsF,gYAAgY,8hBAA8hB,oWAAoW,89CAA89C,oFAAoF,6TAA6T,8cAA8c,8WAA8W,ocAAoc,0mBAA0mB,22BAA22B,mGAAmG,oDAAoD,2VAA2V,0UAA0U,iVAAiV,mMAAmM,0TAA0T,iPAAiP,+NAA+N,6SAA6S,wSAAwS,oFAAoF,wDAAwD,mzBAAmzB,iVAAiV,uIAAuI,oFAAoF,iRAAiR,4UAA4U,oKAAoK,KAAK,iOAAiO,oKAAoK,KAAK,kLAAkL,0NAA0N,oFAAoF,4DAA4D,wDAAwD,2bAA2b,8cAA8c,2NAA2N,8HAA8H,0HAA0H,wDAAwD,6GAA6G,oDAAoD,oFAAoF,gDAAgD,mNAAmN,6FAA6F,wLAAwL,mPAAmP,wJAAwJ,+JAA+J,qJAAqJ,oIAAoI,wIAAwI,oGAAoG,4CAA4C,0CAA0C,6OAA6O,+OAA+O;AAC7x1B,GAAG;AACH;AACA,cAAc,mBAAO,CAAC,4CAAO;;AAE7B,iBAAiB,mBAAO,CAAC,oDAAW;;AAEpC,uCAAuC,mBAAO,CAAC,+CAAQ;;AAEvD,eAAe,mBAAO,CAAC,4CAAO;;AAE9B,8BAA8B,mBAAO,CAAC,+CAAyB;;AAE/D,wCAAwC,uCAAuC,kBAAkB;;AAEjG,4CAA4C,gCAAgC,oCAAoC,oDAAoD,8DAA8D,gEAAgE,EAAE,EAAE,gCAAgC,EAAE,aAAa;;AAErV,kCAAkC,gBAAgB,sBAAsB,OAAO,uDAAuD,aAAa,uDAAuD,2CAA2C,EAAE,EAAE,EAAE,6CAA6C,2EAA2E,EAAE,OAAO,iDAAiD,kFAAkF,EAAE,EAAE,EAAE,EAAE,eAAe;;AAEthB,6CAA6C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAEjN,mCAAmC,2HAA2H;;AAE9J,+BAA+B,kKAAkK;;AAEjM,mDAAmD,gBAAgB,gEAAgE,wDAAwD,6DAA6D,sDAAsD,kHAAkH;;AAEha,wCAAwC,uDAAuD,uCAAuC,SAAS,OAAO,kBAAkB,EAAE,aAAa;;AAEvL,0CAA0C,gFAAgF,eAAe,eAAe,gBAAgB,oBAAoB,MAAM,0CAA0C,+BAA+B,aAAa,qBAAqB,mCAAmC,EAAE,EAAE,cAAc,WAAW,UAAU,EAAE,UAAU,MAAM,iDAAiD,EAAE,UAAU,kBAAkB,EAAE,EAAE,aAAa;;AAEze,iCAAiC,oCAAoC;;AAErE;AACA;AACA,qEAAqE;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA,GAAG,EAAE;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;;;AAGnC;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA,gEAAgE;;;AAGhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,uFAAuF,YAAY;AACnG;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA,qDAAqD,YAAY;AACjE;AACA,iBAAiB;AACjB,eAAe;;AAEf;AACA;;AAEA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;ACpTA;AACA,aAAa,mBAAO,CAAC,qLAAoJ;AACzK,C","file":"hooks/labelbox/demo.js","sourcesContent":["module.exports = {\n  \"content\": [\n    [\n      \"p\",\n      \"1、以下代码展示标注展示、在线标注、options参数配置、onChange事件；\"\n    ],\n    [\n      \"p\",\n      \"2、 核心：在组件中使用useLabelBox，它的三个参数是options、props和onChange，返回一个对象如下说明：\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"labelProps: 当前列表中展现的数据集合\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"gMap: 标注主实例对象【关键对象】\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"initZoom: 当前图像最佳展示zoom值，能够保证全图展示在标注容器中【复位可能使用】\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"tools: {worldToScreen} 对外暴露方法\"\n        ]\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"order\": 0,\n    \"title\": \"基本用法\",\n    \"filename\": \"docs/hooks/labelbox/demo/basic.md\",\n    \"id\": \"docs-hooks-labelbox-demo-basic\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#<!--\",\n          \"title\": \"<!--\"\n        },\n        \"<!--\"\n      ]\n    ]\n  ],\n  \"highlightedCode\": [\n    \"pre\",\n    {\n      \"lang\": \"jsx\",\n      \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> _ <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>useCallback<span class=\\\"token punctuation\\\">,</span> useState<span class=\\\"token punctuation\\\">,</span> useMemo<span class=\\\"token punctuation\\\">,</span> useEffect<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>hooks<span class=\\\"token punctuation\\\">,</span> components<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'baidu-aibp-react-common'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 相关hooks引入</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>useLabelBox<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> hooks<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>HooksLabelBox<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> components<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 图像信息</span>\\n<span class=\\\"token keyword\\\">const</span> defaultImage <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'http://img2.imgtn.bdimg.com/it/u=1962045236,1139336730&amp;fm=26&amp;gp=0.jpg'</span><span class=\\\"token punctuation\\\">,</span>\\n    width<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">500</span><span class=\\\"token punctuation\\\">,</span>\\n    height<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">334</span><span class=\\\"token punctuation\\\">,</span>\\n    grid<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        rowCount<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>\\n        columnCount<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>\\n        color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'blue'</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 标签名&amp;标注框样式声明</span>\\n<span class=\\\"token keyword\\\">const</span> labelNameStyle <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>fontColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#FFFFFF'</span><span class=\\\"token punctuation\\\">,</span> fontSize<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">12</span><span class=\\\"token punctuation\\\">,</span> bgColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#1890FF'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> labelTextStyle <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>fontColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#000'</span><span class=\\\"token punctuation\\\">,</span> fontSize<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">12</span><span class=\\\"token punctuation\\\">,</span> bgColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#FFFFFF'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> labelFeatureStyle <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>strokeColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#0000FF'</span><span class=\\\"token punctuation\\\">,</span> fillColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#FF0000'</span><span class=\\\"token punctuation\\\">,</span> opacity<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0.5</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> labelDrawStyle <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>strokeColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#0000FF'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 标注集合</span>\\n<span class=\\\"token keyword\\\">const</span> defaultLabels <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'110'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [必传] 暂做必传处理，避免引发不可预知错误</span>\\n        select<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 当前标注对象是否呈现选中态[目前由于底层限制，控制每次至多有一个select：true, 即每次最多只能编辑一个标注对象]</span>\\n        label<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 标签名配置</span>\\n            name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'中国'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 标签名称</span>\\n            style<span class=\\\"token punctuation\\\">:</span> labelNameStyle <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 标签样式</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'rect'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 矩形，支持'rect'， 'polygon'</span>\\n        texts<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 该标注对象关联的文本集合，一般业务不需要</span>\\n            position<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            offset<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            maxWidth<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">,</span>\\n            text<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'中国北京'</span><span class=\\\"token punctuation\\\">,</span>\\n            style<span class=\\\"token punctuation\\\">:</span> labelTextStyle\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        markers<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 该标注对象关联的标记集合，一般业务不需要</span>\\n            position<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">150</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            offset<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            events<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>click<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>p1<span class=\\\"token punctuation\\\">,</span> p2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n                console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'p1, p2'</span><span class=\\\"token punctuation\\\">,</span> p1<span class=\\\"token punctuation\\\">,</span> p2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        points<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 该标注对象坐标信息【相对于图像左上角的坐标值】</span>\\n            <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">50</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">50</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">150</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">150</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        style<span class=\\\"token punctuation\\\">:</span> labelFeatureStyle <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 标注框展示样式</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// useLabelBox:options配置</span>\\n<span class=\\\"token keyword\\\">const</span> options <span class=\\\"token operator\\\">=</span> props <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'map-container-id'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [必传] 标注区域的dom-id，此处设置唯一值即可</span>\\n    wrapClassName<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'map-container-class'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [可选] 标注区域的dom-class，可根据业务需求自行决定是否添加</span>\\n    container<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//[必传] 标注区域的dom-size，设置标注区域大小，支持相对单位</span>\\n        width<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'100%'</span><span class=\\\"token punctuation\\\">,</span>\\n        height<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">400</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    image<span class=\\\"token punctuation\\\">:</span> props<span class=\\\"token punctuation\\\">.</span>bizImage<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//[必传] 图像信息</span>\\n    labels<span class=\\\"token punctuation\\\">:</span> props<span class=\\\"token punctuation\\\">.</span>bizLabels<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [必传] 标注框信息</span>\\n    mode<span class=\\\"token punctuation\\\">:</span> props<span class=\\\"token punctuation\\\">.</span>bizMode<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [必传] 当前标注模式【'pan'、‘drawRect’、‘drawPolygon’】，开发人员可自行决定切换模式</span>\\n    deleteIcon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [可选] 删除按钮icon[此处建议默认即可，即不传或者设置为空即可，建议设置此字段]</span>\\n    drawStyle<span class=\\\"token punctuation\\\">:</span> labelDrawStyle<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [可选] 绘制过程样式</span>\\n    filter<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [可选] 是否触发默认内在过滤，默认false【内在过滤仅会对标注框是否超出图像区域进行过滤】</span>\\n    clip<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [可选] 是否需要进行内置图片内裁剪【默认不裁剪】，只针对绘制add情况</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Label <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 业务变量声明</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>bizLabels<span class=\\\"token punctuation\\\">,</span> setBizLabels<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>bizImage<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span>defaultImage<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>bizMode<span class=\\\"token punctuation\\\">,</span> setBizMode<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'drawRect'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// labels数据change</span>\\n    <span class=\\\"token keyword\\\">const</span> handleLabelChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useCallback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>operateType<span class=\\\"token punctuation\\\">,</span> label<span class=\\\"token punctuation\\\">,</span> evt<span class=\\\"token punctuation\\\">,</span> wxy<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 有些中间状态是不需要进行label重设</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>_<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">includes</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'updating'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'boundsChanged'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'updateReset'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'hover'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> operateType<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 需要进行labels变化时，才进行setBizLabels，否则中间态持续执行，如果不停的setBizLabels会造成死循环</span>\\n        <span class=\\\"token function\\\">setBizLabels</span><span class=\\\"token punctuation\\\">(</span>preLabels <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">let</span> newLabels <span class=\\\"token operator\\\">=</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">cloneDeep</span><span class=\\\"token punctuation\\\">(</span>preLabels<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// label添加</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>operateType <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'add'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                newLabels<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n                    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`model-label-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>_<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">uniqueId</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n                    label<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                        name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'测试'</span><span class=\\\"token punctuation\\\">,</span>\\n                        style<span class=\\\"token punctuation\\\">:</span> labelNameStyle\\n                    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                    <span class=\\\"token operator\\\">...</span>label<span class=\\\"token punctuation\\\">,</span>\\n                    style<span class=\\\"token punctuation\\\">:</span> labelFeatureStyle\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// label删除/更新/选中</span>\\n            <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>_<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">includes</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'delete'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'update'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'select'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> operateType<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">const</span> findIndex <span class=\\\"token operator\\\">=</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">findIndex</span><span class=\\\"token punctuation\\\">(</span>newLabels<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>key<span class=\\\"token punctuation\\\">:</span> label<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>findIndex <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    newLabels<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>findIndex<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                    operateType <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'update'</span> <span class=\\\"token operator\\\">&amp;&amp;</span> newLabels<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>label<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                    operateType <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'select'</span> <span class=\\\"token operator\\\">&amp;&amp;</span> newLabels<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>label<span class=\\\"token punctuation\\\">,</span> select<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 【【特别注意：特别注意：特别注意】】：reset 这一步目前必须，需要将label进行直接覆盖即可【作用：所有select: false】</span>\\n            <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>operateType <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'reset'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">const</span> formatLabels <span class=\\\"token operator\\\">=</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>newLabels<span class=\\\"token punctuation\\\">,</span> label <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>label<span class=\\\"token punctuation\\\">,</span> select<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                newLabels <span class=\\\"token operator\\\">=</span> formatLabels<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token keyword\\\">return</span> newLabels<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>\\n        labelProps<span class=\\\"token punctuation\\\">,</span>\\n        gMap<span class=\\\"token punctuation\\\">,</span>\\n        initZoom\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useLabelBox</span><span class=\\\"token punctuation\\\">(</span>\\n        options<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">{</span>bizLabels<span class=\\\"token punctuation\\\">,</span> bizImage<span class=\\\"token punctuation\\\">,</span> bizMode<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        handleLabelChange\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>HooksLabelBox <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>labelProps<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Label</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n    }\n  ],\n  \"highlightedCodes\": {\n    \"jsx\": \"<span class=\\\"token keyword\\\">import</span> _ <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>useCallback<span class=\\\"token punctuation\\\">,</span> useState<span class=\\\"token punctuation\\\">,</span> useMemo<span class=\\\"token punctuation\\\">,</span> useEffect<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>hooks<span class=\\\"token punctuation\\\">,</span> components<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'baidu-aibp-react-common'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 相关hooks引入</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>useLabelBox<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> hooks<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>HooksLabelBox<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> components<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 图像信息</span>\\n<span class=\\\"token keyword\\\">const</span> defaultImage <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    url<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'http://img2.imgtn.bdimg.com/it/u=1962045236,1139336730&amp;fm=26&amp;gp=0.jpg'</span><span class=\\\"token punctuation\\\">,</span>\\n    width<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">500</span><span class=\\\"token punctuation\\\">,</span>\\n    height<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">334</span><span class=\\\"token punctuation\\\">,</span>\\n    grid<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        rowCount<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>\\n        columnCount<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>\\n        color<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'blue'</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 标签名&amp;标注框样式声明</span>\\n<span class=\\\"token keyword\\\">const</span> labelNameStyle <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>fontColor<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'#FFFFFF'</span><span class=\\\"token punctuation\\\">,</span> fontSize<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">12</span><span class=\\\"token punctuation\\\">,</span> bgColor<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'#1890FF'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> labelTextStyle <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>fontColor<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'#000'</span><span class=\\\"token punctuation\\\">,</span> fontSize<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">12</span><span class=\\\"token punctuation\\\">,</span> bgColor<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'#FFFFFF'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> labelFeatureStyle <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>strokeColor<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'#0000FF'</span><span class=\\\"token punctuation\\\">,</span> fillColor<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'#FF0000'</span><span class=\\\"token punctuation\\\">,</span> opacity<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0.5</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> labelDrawStyle <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>strokeColor<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'#0000FF'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// 标注集合</span>\\n<span class=\\\"token keyword\\\">const</span> defaultLabels <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'110'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// [必传] 暂做必传处理，避免引发不可预知错误</span>\\n        select<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 当前标注对象是否呈现选中态[目前由于底层限制，控制每次至多有一个select：true, 即每次最多只能编辑一个标注对象]</span>\\n        label<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 标签名配置</span>\\n            name<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'中国'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 标签名称</span>\\n            style<span class=\\\"token operator\\\">:</span> labelNameStyle <span class=\\\"token comment\\\">// 标签样式</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'rect'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 矩形，支持'rect'， 'polygon'</span>\\n        texts<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 该标注对象关联的文本集合，一般业务不需要</span>\\n            position<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            offset<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            maxWidth<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">,</span>\\n            text<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'中国北京'</span><span class=\\\"token punctuation\\\">,</span>\\n            style<span class=\\\"token operator\\\">:</span> labelTextStyle\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        markers<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 该标注对象关联的标记集合，一般业务不需要</span>\\n            position<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">150</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            offset<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            events<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token function-variable function\\\">click</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">p1<span class=\\\"token punctuation\\\">,</span> p2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n                console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'p1, p2'</span><span class=\\\"token punctuation\\\">,</span> p1<span class=\\\"token punctuation\\\">,</span> p2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        points<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token comment\\\">// 该标注对象坐标信息【相对于图像左上角的坐标值】</span>\\n            <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">50</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">50</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">150</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">150</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        style<span class=\\\"token operator\\\">:</span> labelFeatureStyle <span class=\\\"token comment\\\">// 标注框展示样式</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// useLabelBox:options配置</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">options</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">props</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    id<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'map-container-id'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// [必传] 标注区域的dom-id，此处设置唯一值即可</span>\\n    wrapClassName<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'map-container-class'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// [可选] 标注区域的dom-class，可根据业务需求自行决定是否添加</span>\\n    container<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">//[必传] 标注区域的dom-size，设置标注区域大小，支持相对单位</span>\\n        width<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'100%'</span><span class=\\\"token punctuation\\\">,</span>\\n        height<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">400</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    image<span class=\\\"token operator\\\">:</span> props<span class=\\\"token punctuation\\\">.</span>bizImage<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">//[必传] 图像信息</span>\\n    labels<span class=\\\"token operator\\\">:</span> props<span class=\\\"token punctuation\\\">.</span>bizLabels<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// [必传] 标注框信息</span>\\n    mode<span class=\\\"token operator\\\">:</span> props<span class=\\\"token punctuation\\\">.</span>bizMode<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// [必传] 当前标注模式【'pan'、‘drawRect’、‘drawPolygon’】，开发人员可自行决定切换模式</span>\\n    deleteIcon<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// [可选] 删除按钮icon[此处建议默认即可，即不传或者设置为空即可，建议设置此字段]</span>\\n    drawStyle<span class=\\\"token operator\\\">:</span> labelDrawStyle<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// [可选] 绘制过程样式</span>\\n    filter<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// [可选] 是否触发默认内在过滤，默认false【内在过滤仅会对标注框是否超出图像区域进行过滤】</span>\\n    clip<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token comment\\\">// [可选] 是否需要进行内置图片内裁剪【默认不裁剪】，只针对绘制add情况</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Label</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 业务变量声明</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>bizLabels<span class=\\\"token punctuation\\\">,</span> setBizLabels<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>bizImage<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span>defaultImage<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>bizMode<span class=\\\"token punctuation\\\">,</span> setBizMode<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'drawRect'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// labels数据change</span>\\n    <span class=\\\"token keyword\\\">const</span> handleLabelChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useCallback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">operateType<span class=\\\"token punctuation\\\">,</span> label<span class=\\\"token punctuation\\\">,</span> evt<span class=\\\"token punctuation\\\">,</span> wxy</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// 有些中间状态是不需要进行label重设</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>_<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">includes</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'updating'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'boundsChanged'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'updateReset'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'hover'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> operateType<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token comment\\\">// 需要进行labels变化时，才进行setBizLabels，否则中间态持续执行，如果不停的setBizLabels会造成死循环</span>\\n        <span class=\\\"token function\\\">setBizLabels</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">preLabels</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">let</span> newLabels <span class=\\\"token operator\\\">=</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">cloneDeep</span><span class=\\\"token punctuation\\\">(</span>preLabels<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token comment\\\">// label添加</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>operateType <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'add'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                newLabels<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n                    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">model-label-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>_<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">uniqueId</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n                    label<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                        name<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'测试'</span><span class=\\\"token punctuation\\\">,</span>\\n                        style<span class=\\\"token operator\\\">:</span> labelNameStyle\\n                    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                    <span class=\\\"token operator\\\">...</span>label<span class=\\\"token punctuation\\\">,</span>\\n                    style<span class=\\\"token operator\\\">:</span> labelFeatureStyle\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token comment\\\">// label删除/更新/选中</span>\\n            <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>_<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">includes</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'delete'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'update'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'select'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> operateType<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">const</span> findIndex <span class=\\\"token operator\\\">=</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">findIndex</span><span class=\\\"token punctuation\\\">(</span>newLabels<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>key<span class=\\\"token operator\\\">:</span> label<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>findIndex <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    newLabels<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>findIndex<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                    operateType <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'update'</span> <span class=\\\"token operator\\\">&amp;&amp;</span> newLabels<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>label<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                    operateType <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'select'</span> <span class=\\\"token operator\\\">&amp;&amp;</span> newLabels<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>label<span class=\\\"token punctuation\\\">,</span> select<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token comment\\\">// 【【特别注意：特别注意：特别注意】】：reset 这一步目前必须，需要将label进行直接覆盖即可【作用：所有select: false】</span>\\n            <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>operateType <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'reset'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">const</span> formatLabels <span class=\\\"token operator\\\">=</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>newLabels<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">label</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>label<span class=\\\"token punctuation\\\">,</span> select<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                newLabels <span class=\\\"token operator\\\">=</span> formatLabels<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token keyword\\\">return</span> newLabels<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>\\n        labelProps<span class=\\\"token punctuation\\\">,</span>\\n        gMap<span class=\\\"token punctuation\\\">,</span>\\n        initZoom\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useLabelBox</span><span class=\\\"token punctuation\\\">(</span>\\n        options<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">{</span>bizLabels<span class=\\\"token punctuation\\\">,</span> bizImage<span class=\\\"token punctuation\\\">,</span> bizMode<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        handleLabelChange\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">HooksLabelBox</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">labelProps</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Label</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n  },\n  \"preview\": function bishengPluginReactPreviewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _lodash = _interopRequireDefault(require(\"lodash\"));\n\n  var _react = require(\"react\");\n\n  var _baiduAibpReactCommon = require(\"baidu-aibp-react-common\");\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // 相关hooks引入\n  var useLabelBox = _baiduAibpReactCommon.hooks.useLabelBox;\n  var HooksLabelBox = _baiduAibpReactCommon.components.HooksLabelBox; // 图像信息\n\n  var defaultImage = {\n    url: 'http://img2.imgtn.bdimg.com/it/u=1962045236,1139336730&fm=26&gp=0.jpg',\n    width: 500,\n    height: 334,\n    grid: {\n      rowCount: 5,\n      columnCount: 5,\n      color: 'blue'\n    }\n  }; // 标签名&标注框样式声明\n\n  var labelNameStyle = {\n    fontColor: '#FFFFFF',\n    fontSize: 12,\n    bgColor: '#1890FF'\n  };\n  var labelTextStyle = {\n    fontColor: '#000',\n    fontSize: 12,\n    bgColor: '#FFFFFF'\n  };\n  var labelFeatureStyle = {\n    strokeColor: '#0000FF',\n    fillColor: '#FF0000',\n    opacity: 0.5\n  };\n  var labelDrawStyle = {\n    strokeColor: '#0000FF'\n  }; // 标注集合\n\n  var defaultLabels = [{\n    key: '110',\n    // [必传] 暂做必传处理，避免引发不可预知错误\n    select: false,\n    // 当前标注对象是否呈现选中态[目前由于底层限制，控制每次至多有一个select：true, 即每次最多只能编辑一个标注对象]\n    label: {\n      // 标签名配置\n      name: '中国',\n      // 标签名称\n      style: labelNameStyle // 标签样式\n\n    },\n    type: 'rect',\n    // 矩形，支持'rect'， 'polygon'\n    texts: [{\n      // 该标注对象关联的文本集合，一般业务不需要\n      position: {\n        x: 20,\n        y: 20\n      },\n      offset: {\n        x: 0,\n        y: 0\n      },\n      maxWidth: 100,\n      text: '中国北京',\n      style: labelTextStyle\n    }],\n    markers: [{\n      // 该标注对象关联的标记集合，一般业务不需要\n      position: {\n        x: 150,\n        y: 100\n      },\n      offset: {\n        x: 0,\n        y: 0\n      },\n      events: {\n        click: function click(p1, p2) {\n          console.log('p1, p2', p1, p2);\n        }\n      }\n    }],\n    points: [// 该标注对象坐标信息【相对于图像左上角的坐标值】\n    {\n      x: 100,\n      y: 50\n    }, {\n      x: 200,\n      y: 50\n    }, {\n      x: 200,\n      y: 150\n    }, {\n      x: 100,\n      y: 150\n    }],\n    style: labelFeatureStyle // 标注框展示样式\n\n  }]; // useLabelBox:options配置\n\n  var options = function options(props) {\n    return {\n      id: 'map-container-id',\n      // [必传] 标注区域的dom-id，此处设置唯一值即可\n      wrapClassName: 'map-container-class',\n      // [可选] 标注区域的dom-class，可根据业务需求自行决定是否添加\n      container: {\n        //[必传] 标注区域的dom-size，设置标注区域大小，支持相对单位\n        width: '100%',\n        height: 400\n      },\n      image: props.bizImage,\n      //[必传] 图像信息\n      labels: props.bizLabels,\n      // [必传] 标注框信息\n      mode: props.bizMode,\n      // [必传] 当前标注模式【'pan'、‘drawRect’、‘drawPolygon’】，开发人员可自行决定切换模式\n      deleteIcon: '',\n      // [可选] 删除按钮icon[此处建议默认即可，即不传或者设置为空即可，建议设置此字段]\n      drawStyle: labelDrawStyle,\n      // [可选] 绘制过程样式\n      filter: true,\n      // [可选] 是否触发默认内在过滤，默认false【内在过滤仅会对标注框是否超出图像区域进行过滤】\n      clip: true // [可选] 是否需要进行内置图片内裁剪【默认不裁剪】，只针对绘制add情况\n\n    };\n  };\n\n  var Label = function Label() {\n    // 业务变量声明\n    var _useState = (0, _react.useState)(),\n        _useState2 = _slicedToArray(_useState, 2),\n        bizLabels = _useState2[0],\n        setBizLabels = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(defaultImage),\n        _useState4 = _slicedToArray(_useState3, 1),\n        bizImage = _useState4[0];\n\n    var _useState5 = (0, _react.useState)('drawRect'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bizMode = _useState6[0],\n        setBizMode = _useState6[1]; // labels数据change\n\n\n    var handleLabelChange = (0, _react.useCallback)(function (operateType, label, evt, wxy) {\n      // 有些中间状态是不需要进行label重设\n      if (_lodash[\"default\"].includes(['updating', 'boundsChanged', 'updateReset', 'hover'], operateType)) {\n        return;\n      } // 需要进行labels变化时，才进行setBizLabels，否则中间态持续执行，如果不停的setBizLabels会造成死循环\n\n\n      setBizLabels(function (preLabels) {\n        var newLabels = _lodash[\"default\"].cloneDeep(preLabels); // label添加\n\n\n        if (operateType === 'add') {\n          newLabels.push(_objectSpread(_objectSpread({\n            key: \"model-label-\".concat(_lodash[\"default\"].uniqueId()),\n            label: {\n              name: '测试',\n              style: labelNameStyle\n            }\n          }, label), {}, {\n            style: labelFeatureStyle\n          }));\n        } // label删除/更新/选中\n        else if (_lodash[\"default\"].includes(['delete', 'update', 'select'], operateType)) {\n            var findIndex = _lodash[\"default\"].findIndex(newLabels, {\n              key: label.key\n            });\n\n            if (findIndex >= 0) {\n              newLabels.splice(findIndex, 1);\n              operateType === 'update' && newLabels.push(label);\n              operateType === 'select' && newLabels.push(_objectSpread(_objectSpread({}, label), {}, {\n                select: true\n              }));\n            }\n          } // 【【特别注意：特别注意：特别注意】】：reset 这一步目前必须，需要将label进行直接覆盖即可【作用：所有select: false】\n          else if (operateType === 'reset') {\n              var formatLabels = _lodash[\"default\"].map(newLabels, function (label) {\n                return _objectSpread(_objectSpread({}, label), {}, {\n                  select: false\n                });\n              });\n\n              newLabels = formatLabels;\n            }\n\n        return newLabels;\n      });\n    }, []);\n\n    var _useLabelBox = useLabelBox(options, {\n      bizLabels: bizLabels,\n      bizImage: bizImage,\n      bizMode: bizMode\n    }, handleLabelChange),\n        labelProps = _useLabelBox.labelProps,\n        gMap = _useLabelBox.gMap,\n        initZoom = _useLabelBox.initZoom;\n\n    return /*#__PURE__*/React.createElement(HooksLabelBox, labelProps);\n  };\n\n  return /*#__PURE__*/React.createElement(Label, null);\n}\n};","module.exports = {\n    'basic': require('/Users/xuemin02/work/aibp-common/node_modules/bisheng/lib/loaders/source-loader!/Users/xuemin02/work/aibp-common/docs/hooks/labelbox/demo/basic.md'),\n}"],"sourceRoot":""}