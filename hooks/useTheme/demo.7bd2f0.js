(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{1721:function(n,s,a){n.exports={content:[["p","结合ColorPicker设置主色"]],meta:{order:0,title:"设置主色",filename:"docs/hooks/useTheme/demo/setPrimaryColor.md",id:"docs-hooks-useTheme-demo-setPrimaryColor"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useCallback<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>components<span class="token punctuation">,</span> hooks<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>ColorPicker<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>useTheme<span class="token punctuation">}</span> <span class="token operator">=</span> hooks<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>setTheme<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>cssPath<span class="token punctuation">:</span> <span class="token string">\'/color.less\'</span><span class="token punctuation">,</span> jsPath<span class="token punctuation">:</span> <span class="token string">\'/less.min.js\'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> handleThemeChange <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> string<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token function">setTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">\'@primary-color\'</span><span class="token punctuation">:</span> color<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColorPicker</span> <span class="token attr-name">onChangeComplete</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleThemeChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useCallback<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>components<span class="token punctuation">,</span> hooks<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>ColorPicker<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>useTheme<span class="token punctuation">}</span> <span class="token operator">=</span> hooks<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>setTheme<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>cssPath<span class="token operator">:</span> <span class="token string">\'/color.less\'</span><span class="token punctuation">,</span> jsPath<span class="token operator">:</span> <span class="token string">\'/less.min.js\'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> handleThemeChange <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">color<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">\'@primary-color\'</span><span class="token operator">:</span> color<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ColorPicker</span></span> <span class="token attr-name">onChangeComplete</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleThemeChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){a(0),a(7);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=function(s){if(s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var a=p();if(a&&a.has(s))return a.get(s);var t={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in s)if(Object.prototype.hasOwnProperty.call(s,e)){var c=o?Object.getOwnPropertyDescriptor(s,e):null;c&&(c.get||c.set)?Object.defineProperty(t,e,c):t[e]=s[e]}t.default=s,a&&a.set(s,t);return t}(a(0)),t=a(955);function p(){if("function"!=typeof WeakMap)return null;var n=new WeakMap;return p=function(){return n},n}var o=t.components.ColorPicker,e=(0,t.hooks.useTheme)({cssPath:"/color.less",jsPath:"/less.min.js"}).setTheme,c=(0,s.useCallback)((function(n){e({"@primary-color":n})}),[]);return s.default.createElement(o,{onChangeComplete:c})}}},810:function(n,s,a){n.exports={setPrimaryColor:a(1721)}}}]);