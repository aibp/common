(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{1714:function(n,s,a){n.exports={content:[["p","发出具体请求前的确认框。"]],meta:{order:0,title:"请求确认框",filename:"docs/hooks/useDialog/demo/ajax.md",id:"docs-hooks-useDialog-demo-ajax"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useCallback<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>hooks<span class="token punctuation">,</span> components<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>useDialog<span class="token punctuation">}</span> <span class="token operator">=</span> hooks<span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>HooksDialog<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>dialogProps<span class="token punctuation">,</span> handleDialog<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> handleDelete <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token function">handleDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        type<span class="token punctuation">:</span> <span class="token string">\'ajax\'</span><span class="token punctuation">,</span>\n        action<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>success<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        content<span class="token punctuation">:</span> <span class="token string">\'确定要删除吗？\'</span><span class="token punctuation">,</span>\n        <span class="token function">$onRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment" spellcheck="true">// return params;</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>id<span class="token punctuation">:</span> <span class="token string">\'123\'</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">$onResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n           <span class="token comment" spellcheck="true">// doSomething</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>handleDialog<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleDelete<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n    mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useCallback<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>hooks<span class="token punctuation">,</span> components<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>useDialog<span class="token punctuation">}</span> <span class="token operator">=</span> hooks<span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>HooksDialog<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>dialogProps<span class="token punctuation">,</span> handleDialog<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> handleDelete <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">handleDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        type<span class="token operator">:</span> <span class="token string">\'ajax\'</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>success<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        content<span class="token operator">:</span> <span class="token string">\'确定要删除吗？\'</span><span class="token punctuation">,</span>\n        <span class="token function">$onRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// return params;</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token string">\'123\'</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">$onResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n           <span class="token comment">// doSomething</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>handleDialog<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleDelete<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n    mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){a(0),a(7);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=function(s){if(s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var a=o();if(a&&a.has(s))return a.get(s);var t={},p=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in s)if(Object.prototype.hasOwnProperty.call(s,c)){var e=p?Object.getOwnPropertyDescriptor(s,c):null;e&&(e.get||e.set)?Object.defineProperty(t,c,e):t[c]=s[c]}t.default=s,a&&a.set(s,t);return t}(a(0)),t=a(118),p=a(955);function o(){if("function"!=typeof WeakMap)return null;var n=new WeakMap;return o=function(){return n},n}var c=p.hooks.useDialog,e=(p.components.HooksDialog,c()),u=(e.dialogProps,e.handleDialog),l=(0,s.useCallback)((function(){u({type:"ajax",action:function(){return new Promise((function(n,s){return window.setTimeout((function(){return n({success:!0})}),500)}))},content:"确定要删除吗？",$onRequest:function(){return{id:"123"}},$onResponse:function(){}})}),[u]);return s.default.createElement("div",null,s.default.createElement(t.Button,{onClick:l},"删除"))}}},1715:function(n,s,a){n.exports={content:[["p","打开一个抽屉。"]],meta:{order:3,title:"打开抽屉",filename:"docs/hooks/useDialog/demo/drawer.md",id:"docs-hooks-useDialog-demo-drawer"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useCallback<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>hooks<span class="token punctuation">,</span> components<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>useDialog<span class="token punctuation">}</span> <span class="token operator">=</span> hooks<span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>HooksDialog<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>dialogProps<span class="token punctuation">,</span> handleDialog<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Comp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">\'内容\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> handleOpenDrawer <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token function">handleDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        type<span class="token punctuation">:</span> <span class="token string">\'drawer\'</span><span class="token punctuation">,</span>\n        content<span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Comp</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n        config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            title<span class="token punctuation">:</span> <span class="token string">\'打开抽屉\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">$onRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment" spellcheck="true">// doSomething</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">$onResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n           <span class="token comment" spellcheck="true">// doSomething</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>handleDialog<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleOpenDrawer<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>打开抽屉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>HooksDialog <span class="token punctuation">{</span><span class="token operator">...</span>dialogProps<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n    mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useCallback<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>hooks<span class="token punctuation">,</span> components<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>useDialog<span class="token punctuation">}</span> <span class="token operator">=</span> hooks<span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>HooksDialog<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>dialogProps<span class="token punctuation">,</span> handleDialog<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Comp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">\'内容\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> handleOpenDrawer <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">handleDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        type<span class="token operator">:</span> <span class="token string">\'drawer\'</span><span class="token punctuation">,</span>\n        content<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Comp</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n        config<span class="token operator">:</span> <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'打开抽屉\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">$onRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// doSomething</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">$onResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n           <span class="token comment">// doSomething</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>handleDialog<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleOpenDrawer<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>打开抽屉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HooksDialog</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">dialogProps</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n    mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){a(0),a(7);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=function(s){if(s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var a=o();if(a&&a.has(s))return a.get(s);var t={},p=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in s)if(Object.prototype.hasOwnProperty.call(s,c)){var e=p?Object.getOwnPropertyDescriptor(s,c):null;e&&(e.get||e.set)?Object.defineProperty(t,c,e):t[c]=s[c]}t.default=s,a&&a.set(s,t);return t}(a(0)),t=a(118),p=a(955);function o(){if("function"!=typeof WeakMap)return null;var n=new WeakMap;return o=function(){return n},n}var c=p.hooks.useDialog,e=p.components.HooksDialog,u=c(),l=u.dialogProps,k=u.handleDialog,i=function(){return"内容"},r=(0,s.useCallback)((function(){k({type:"drawer",content:s.default.createElement(i,null),config:{title:"打开抽屉"},$onRequest:function(){},$onResponse:function(){}})}),[k]);return s.default.createElement("div",null,s.default.createElement(t.Button,{onClick:r},"打开抽屉"),s.default.createElement(e,l))}}},1716:function(n,s,a){n.exports={content:[["p","对话框里嵌入表单。"]],meta:{order:2,title:"表单对话框",filename:"docs/hooks/useDialog/demo/form.md",id:"docs-hooks-useDialog-demo-form"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useCallback<span class="token punctuation">,</span> useEffect<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Input<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>hooks<span class="token punctuation">,</span> components<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        label<span class="token punctuation">:</span> <span class="token string">\'名称\'</span><span class="token punctuation">,</span>\n        control<span class="token punctuation">:</span> Input<span class="token punctuation">,</span>\n        rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">\'请输入名称\'</span><span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            placeholder<span class="token punctuation">:</span> <span class="token string">\'请输入名称\'</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> action <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'success\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Create <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>onSubmit<span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n    \n    <span class="token keyword">const</span> <span class="token punctuation">{</span>useFormSubmit<span class="token punctuation">}</span> <span class="token operator">=</span> hooks<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>HooksForm<span class="token punctuation">,</span> notification<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>submit<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useFormSubmit</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        action<span class="token punctuation">,</span>\n        form<span class="token punctuation">,</span>\n        <span class="token function">$onRequest</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            formData<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">\'123\'</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">$onResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            notification<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">$onError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            notification<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token comment" spellcheck="true">// 将当前组件的submit方法传递给父组件，以便父组件(对话框)调用</span>\n        onSubmit <span class="token operator">&amp;&amp;</span> <span class="token function">onSubmit</span><span class="token punctuation">(</span>submit<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>submit<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HooksForm</span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span> <span class="token attr-name">controls</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>controls<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>useDialog<span class="token punctuation">}</span> <span class="token operator">=</span> hooks<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>HooksDialog<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>dialogProps<span class="token punctuation">,</span> handleDialog<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> handleOpenModal <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token function">handleDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            type<span class="token punctuation">:</span> <span class="token string">\'modal\'</span><span class="token punctuation">,</span>\n            content<span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Create</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n            config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                title<span class="token punctuation">:</span> <span class="token string">\'创建XXX\'</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">$onRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment" spellcheck="true">// doSomething</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">$onResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment" spellcheck="true">// doSomething</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>handleDialog<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleOpenModal<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>打开表单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n            <span class="token operator">&lt;</span>HooksDialog <span class="token punctuation">{</span><span class="token operator">...</span>dialogProps<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useCallback<span class="token punctuation">,</span> useEffect<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Input<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>hooks<span class="token punctuation">,</span> components<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        label<span class="token operator">:</span> <span class="token string">\'名称\'</span><span class="token punctuation">,</span>\n        control<span class="token operator">:</span> Input<span class="token punctuation">,</span>\n        rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token operator">:</span> <span class="token string">\'请输入名称\'</span><span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        config<span class="token operator">:</span> <span class="token punctuation">{</span>\n            placeholder<span class="token operator">:</span> <span class="token string">\'请输入名称\'</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">action</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'success\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Create</span> <span class="token operator">=</span> <span class="token parameter">props</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>onSubmit<span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n    \n    <span class="token keyword">const</span> <span class="token punctuation">{</span>useFormSubmit<span class="token punctuation">}</span> <span class="token operator">=</span> hooks<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>HooksForm<span class="token punctuation">,</span> notification<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>submit<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useFormSubmit</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        action<span class="token punctuation">,</span>\n        form<span class="token punctuation">,</span>\n        <span class="token function">$onRequest</span><span class="token punctuation">(</span><span class="token parameter">formData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            formData<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">\'123\'</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">$onResponse</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            notification<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">$onError</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            notification<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token comment">// 将当前组件的submit方法传递给父组件，以便父组件(对话框)调用</span>\n        onSubmit <span class="token operator">&amp;&amp;</span> <span class="token function">onSubmit</span><span class="token punctuation">(</span>submit<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>submit<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HooksForm</span></span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span> <span class="token attr-name">controls</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>controls<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>useDialog<span class="token punctuation">}</span> <span class="token operator">=</span> hooks<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>HooksDialog<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>dialogProps<span class="token punctuation">,</span> handleDialog<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> handleOpenModal <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">handleDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            type<span class="token operator">:</span> <span class="token string">\'modal\'</span><span class="token punctuation">,</span>\n            content<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Create</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n            config<span class="token operator">:</span> <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">\'创建XXX\'</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">$onRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">// doSomething</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">$onResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// doSomething</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>handleDialog<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleOpenModal<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>打开表单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HooksDialog</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">dialogProps</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){a(0),a(7);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=function(s){if(s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var a=o();if(a&&a.has(s))return a.get(s);var t={},p=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in s)if(Object.prototype.hasOwnProperty.call(s,c)){var e=p?Object.getOwnPropertyDescriptor(s,c):null;e&&(e.get||e.set)?Object.defineProperty(t,c,e):t[c]=s[c]}t.default=s,a&&a.set(s,t);return t}(a(0)),t=a(118),p=a(955);function o(){if("function"!=typeof WeakMap)return null;var n=new WeakMap;return o=function(){return n},n}function c(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(n)))return;var a=[],t=!0,p=!1,o=void 0;try{for(var c,e=n[Symbol.iterator]();!(t=(c=e.next()).done)&&(a.push(c.value),!s||a.length!==s);t=!0);}catch(n){p=!0,o=n}finally{try{t||null==e.return||e.return()}finally{if(p)throw o}}return a}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return e(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return e(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var u=[{name:"name",label:"名称",control:t.Input,rules:[{required:!0,message:"请输入名称"}],config:{placeholder:"请输入名称"}}],l=function(){return new Promise((function(n,s){return window.setTimeout((function(){return n("success")}),500)}))},k=function(n){var a=n.onSubmit,o=p.hooks.useFormSubmit,e=p.components.HooksForm,k=p.components.notification,i=c(t.Form.useForm(),1)[0],r=o({action:l,form:i,$onRequest:function(n){n.id="123"},$onResponse:function(n){k.success(n)},$onError:function(n){k.error(n)}}).submit;return(0,s.useEffect)((function(){a&&a(r)}),[r]),s.default.createElement(e,{form:i,controls:u})},i=function(){var n=p.hooks.useDialog,a=p.components.HooksDialog,o=n(),c=o.dialogProps,e=o.handleDialog,u=(0,s.useCallback)((function(){e({type:"modal",content:s.default.createElement(k,null),config:{title:"创建XXX"},$onRequest:function(){},$onResponse:function(){}})}),[e]);return s.default.createElement("div",null,s.default.createElement(t.Button,{onClick:u},"打开表单"),s.default.createElement(a,c))};return s.default.createElement(i,null)}}},1717:function(n,s,a){n.exports={content:[["p","打开一个对话框。"]],meta:{order:1,title:"打开对话框",filename:"docs/hooks/useDialog/demo/modal.md",id:"docs-hooks-useDialog-demo-modal"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useCallback<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>hooks<span class="token punctuation">,</span> components<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Comp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">\'内容\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>useDialog<span class="token punctuation">}</span> <span class="token operator">=</span> hooks<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>HooksDialog<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>dialogProps<span class="token punctuation">,</span> handleDialog<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> handleOpenModal <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token function">handleDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            type<span class="token punctuation">:</span> <span class="token string">\'modal\'</span><span class="token punctuation">,</span>\n            content<span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Comp</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n            config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                title<span class="token punctuation">:</span> <span class="token string">\'打开对话框\'</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">$onRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment" spellcheck="true">// doSomething</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">$onResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment" spellcheck="true">// doSomething</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>handleDialog<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleOpenModal<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>打开对话框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n            <span class="token operator">&lt;</span>HooksDialog <span class="token punctuation">{</span><span class="token operator">...</span>dialogProps<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useCallback<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>hooks<span class="token punctuation">,</span> components<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Comp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">\'内容\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>useDialog<span class="token punctuation">}</span> <span class="token operator">=</span> hooks<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>HooksDialog<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>dialogProps<span class="token punctuation">,</span> handleDialog<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> handleOpenModal <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">handleDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            type<span class="token operator">:</span> <span class="token string">\'modal\'</span><span class="token punctuation">,</span>\n            content<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Comp</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n            config<span class="token operator">:</span> <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">\'打开对话框\'</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">$onRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">// doSomething</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">$onResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// doSomething</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>handleDialog<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleOpenModal<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>打开对话框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HooksDialog</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">dialogProps</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){a(0),a(7);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=function(s){if(s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var a=o();if(a&&a.has(s))return a.get(s);var t={},p=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in s)if(Object.prototype.hasOwnProperty.call(s,c)){var e=p?Object.getOwnPropertyDescriptor(s,c):null;e&&(e.get||e.set)?Object.defineProperty(t,c,e):t[c]=s[c]}t.default=s,a&&a.set(s,t);return t}(a(0)),t=a(118),p=a(955);function o(){if("function"!=typeof WeakMap)return null;var n=new WeakMap;return o=function(){return n},n}var c=function(){return"内容"},e=function(){var n=p.hooks.useDialog,a=p.components.HooksDialog,o=n(),e=o.dialogProps,u=o.handleDialog,l=(0,s.useCallback)((function(){u({type:"modal",content:s.default.createElement(c,null),config:{title:"打开对话框"},$onRequest:function(){},$onResponse:function(){}})}),[u]);return s.default.createElement("div",null,s.default.createElement(t.Button,{onClick:l},"打开对话框"),s.default.createElement(a,e))};return s.default.createElement(e,null)}}},802:function(n,s,a){n.exports={ajax:a(1714),drawer:a(1715),form:a(1716),modal:a(1717)}}}]);