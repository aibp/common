(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{799:function(n,s){n.exports={content:["section",["h2","组件介绍"],["p","支持图像标注展示 & 在线标注；标注类型包括图像分类、目标检测、图像分割等标注形式；"],["ol",["li",["p","标注展示"]],["li",["p","在线标注（图像分类、目标检测、图像分割）"]],["li",["p","标注缩略图（2种展示形式：图像缩略图、宫格缩略图）"]],["li",["p","自定义标注展示样式"]]],["p",["img",{src:"http://wiki.baidu.com/download/attachments/991386920/image2019-11-29_19-9-8.png?version=1&modificationDate=1575025755000&api=v2",width:"500"}]],["h2","代码演示"]],meta:{title:"useLabelBox",cols:1,filename:"docs/hooks/labelbox/index.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#组件介绍",title:"组件介绍"},"组件介绍"]],["li",["a",{className:"bisheng-toc-h2",href:"#代码演示",title:"代码演示"},"代码演示"]],["li",["a",{className:"bisheng-toc-h2",href:"#API",title:"API"},"API"]]],api:["section",["h2","API"],["h4","useLabelBox参数"],["table",["thead",["tr",["th","参数"],["th","说明"],["th","是否必填"],["th","类型"]]],["tbody",["tr",["td","options"],["td","配置数据"],["td","是"],["td","props => object"]],["tr",["td","props"],["td","options配置方法接收参数"],["td","是"],["td","any"]],["tr",["td","onChange"],["td","监听事件: 具体说明参考下方onChange参数说明"],["td","否"],["td","args => void"]]]],["pre",{lang:"js static",highlighted:'<span class="token operator">/</span><span class="token operator">/</span> example<span class="token punctuation">:</span> \n<span class="token keyword">const</span> {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>} <span class="token operator">=</span> <span class="token function">useLabelBox</span><span class="token punctuation">(</span>\n    options<span class="token punctuation">,</span>\n    props<span class="token punctuation">,</span>\n    onChange\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code","// example: \nconst {...} = useLabelBox(\n    options,\n    props,\n    onChange\n);"]],["h4","options配置参数"],["table",["thead",["tr",["th","参数"],["th","说明"],["th","是否必填"],["th","类型"]]],["tbody",["tr",["td","id"],["td","标注区域的dom-id，此处设置唯一值即可"],["td","是"],["td","string"]],["tr",["td","wrapClassName"],["td","标注区域的dom-class"],["td","否"],["td","string"]],["tr",["td","container"],["td","标注区域的dom-size，设置标注区域大小，支持相对单位"],["td","是"],["td","object"]],["tr",["td","image"],["td","图像信息，具体参看下方说明"],["td","是"],["td","Image，具体参看下方Image参数说明"]],["tr",["td","labels"],["td","标注集合"],["td","是"],["td","Label:[]，具体参看下方Label参数说明"]],["tr",["td","mode"],["td","当前标注模式【'pan'、‘drawRect’、‘drawPolygon’】"],["td","是"],["td","string"]],["tr",["td","deleteIcon"],["td","删除按钮icon"],["td","否"],["td","string"]],["tr",["td","drawStyle"],["td","绘制过程样式，使用参考上方使用代码"],["td","否"],["td","object"]],["tr",["td","filter"],["td","是否触发默认内在过滤，默认false，【内在过滤仅会对标注框是否超出图像区域进行过滤】"],["td","否"],["td","boolean"]],["tr",["td","clip"],["td","是否触发默认内在裁剪，默认false"],["td","否"],["td","boolean"]]]],["pre",{lang:"js static",highlighted:'<span class="token operator">/</span><span class="token operator">/</span> example<span class="token punctuation">:</span> \n<span class="token keyword">const</span> options <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{\n    id<span class="token punctuation">:</span> <span class="token string">\'map-container-id\'</span><span class="token punctuation">,</span>\n    wrapClassName<span class="token punctuation">:</span> <span class="token string">\'map-container-class\'</span><span class="token punctuation">,</span>\n    container<span class="token punctuation">:</span> {\n        width<span class="token punctuation">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span>\n        height<span class="token punctuation">:</span> <span class="token number">400</span>\n    }<span class="token punctuation">,</span>\n    image<span class="token punctuation">:</span> props<span class="token punctuation">.</span>bizImage<span class="token punctuation">,</span>\n    labels<span class="token punctuation">:</span> props<span class="token punctuation">.</span>bizLabels<span class="token punctuation">,</span>\n    mode<span class="token punctuation">:</span> props<span class="token punctuation">.</span>bizMode<span class="token punctuation">,</span>\n    deleteIcon<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    drawStyle<span class="token punctuation">:</span> labelDrawStyle<span class="token punctuation">,</span>\n    filter<span class="token punctuation">:</span> <span class="token boolean">true</span>\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code","// example: \nconst options = props => ({\n    id: 'map-container-id',\n    wrapClassName: 'map-container-class',\n    container: {\n        width: '100%',\n        height: 400\n    },\n    image: props.bizImage,\n    labels: props.bizLabels,\n    mode: props.bizMode,\n    deleteIcon: '',\n    drawStyle: labelDrawStyle,\n    filter: true\n});"]],["h4","Image配置参数"],["table",["thead",["tr",["th","参数"],["th","说明"],["th","是否必填"],["th","类型"]]],["tbody",["tr",["td","url"],["td","标注图像的url"],["td","是"],["td","string"]],["tr",["td","width"],["td","标注图像宽度:原始图宽度"],["td","是"],["td","string、number"]],["tr",["td","height"],["td","标注图像高度:原始图高度"],["td","是"],["td","string、number"]],["tr",["td","grid"],["td","图像辅助网格信息"],["td","否"],["td","object"]],["tr",["td","grid.rowCount"],["td","辅助网格行数"],["td","是"],["td","number"]],["tr",["td","grid.columnCount"],["td","辅助网格列数"],["td","是"],["td","number"]],["tr",["td","grid.color"],["td","辅助网格颜色"],["td","是"],["td","string: 目前仅支持十六进制颜色值"]]]],["pre",{lang:"js static",highlighted:'<span class="token operator">/</span><span class="token operator">/</span> example<span class="token punctuation">:</span> \n<span class="token keyword">const</span> defaultImage <span class="token operator">=</span> {\n    url<span class="token punctuation">:</span> <span class="token string">\'http://img2.imgtn.bdimg.com/it/u=1962045236,1139336730&amp;fm=26&amp;gp=0.jpg\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">,</span>\n    height<span class="token punctuation">:</span> <span class="token number">334</span><span class="token punctuation">,</span>\n    grid<span class="token punctuation">:</span> {\n        rowCount<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n        columnCount<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n        color<span class="token punctuation">:</span> <span class="token string">\'blue\'</span>\n    }\n}<span class="token comment" spellcheck="true">;</span>'},["code","// example: \nconst defaultImage = {\n    url: 'http://img2.imgtn.bdimg.com/it/u=1962045236,1139336730&fm=26&gp=0.jpg',\n    width: 500,\n    height: 334,\n    grid: {\n        rowCount: 5,\n        columnCount: 5,\n        color: 'blue'\n    }\n};"]],["h4","Label配置参数"],["table",["thead",["tr",["th","参数"],["th","说明"],["th","是否必填"],["th","类型"]]],["tbody",["tr",["td","key"],["td","标注对象标识字段"],["td","是"],["td","string"]],["tr",["td","select"],["td","标识是否呈现选中态：目前仅支持最多一个标注的select:true为编辑态"],["td","否"],["td","boolean"]],["tr",["td","label"],["td","标签名相关配置"],["td","是"],["td","object"]],["tr",["td","label.name"],["td","标签名名称"],["td","是"],["td","string"]],["tr",["td","label.style"],["td","标签名样式"],["td","是"],["td","object"]],["tr",["td","type"],["td","当前标注框类型，'rect' or 'polygon'"],["td","是"],["td","string"]],["tr",["td","texts"],["td","关联文本对象集合"],["td","否"],["td","Text:[]"]],["tr",["td","markers"],["td","关联标记对象集合"],["td","否"],["td","Marker:[]"]],["tr",["td","points"],["td","标注框集合"],["td","是"],["td","Point:[]"]],["tr",["td","style"],["td","标注框样式"],["td","否"],["td","object"]]]],["pre",{lang:"js static",highlighted:'<span class="token operator">/</span><span class="token operator">/</span> example<span class="token punctuation">:</span> \n<span class="token keyword">const</span> defaultLabels <span class="token operator">=</span> <span class="token punctuation">[</span>\n    {\n        key<span class="token punctuation">:</span> <span class="token string">\'110\'</span><span class="token punctuation">,</span>\n        <span class="token keyword">select</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        label<span class="token punctuation">:</span> { <span class="token operator">/</span><span class="token operator">/</span> 标签名配置\n            name<span class="token punctuation">:</span> <span class="token string">\'中国\'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> 标签名称\n            style<span class="token punctuation">:</span> labelNameStyle <span class="token operator">/</span><span class="token operator">/</span> 标签样式\n        }<span class="token punctuation">,</span>\n        type<span class="token punctuation">:</span> <span class="token string">\'rect\'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> 矩形，支持<span class="token string">\'rect\'</span>， <span class="token string">\'polygon\'</span>\n        texts<span class="token punctuation">:</span> <span class="token punctuation">[</span>{ <span class="token operator">/</span><span class="token operator">/</span> 该标注对象关联的文本集合，一般业务不需要\n            position<span class="token punctuation">:</span> {x<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">20</span>}<span class="token punctuation">,</span>\n            offset<span class="token punctuation">:</span> {x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span>}<span class="token punctuation">,</span>\n            maxWidth<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n            text<span class="token punctuation">:</span> <span class="token string">\'中国北京\'</span><span class="token punctuation">,</span>\n            style<span class="token punctuation">:</span> labelTextStyle\n        }<span class="token punctuation">]</span><span class="token punctuation">,</span>\n        markers<span class="token punctuation">:</span> <span class="token punctuation">[</span>{ <span class="token operator">/</span><span class="token operator">/</span> 该标注对象关联的标记集合，一般业务不需要\n            position<span class="token punctuation">:</span> {x<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">100</span>}<span class="token punctuation">,</span>\n            offset<span class="token punctuation">:</span> {x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span>}<span class="token punctuation">,</span>\n            events<span class="token punctuation">:</span> {click<span class="token punctuation">:</span> <span class="token punctuation">(</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'p1, p2\'</span><span class="token punctuation">,</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }}\n        }<span class="token punctuation">]</span><span class="token punctuation">,</span>\n        points<span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token operator">/</span><span class="token operator">/</span> 该标注对象坐标信息【相对于图像左上角的坐标值】\n            {x<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">50</span>}<span class="token punctuation">,</span>\n            {x<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">50</span>}<span class="token punctuation">,</span>\n            {x<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">150</span>}<span class="token punctuation">,</span>\n            {x<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">150</span>}\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        style<span class="token punctuation">:</span> labelFeatureStyle <span class="token operator">/</span><span class="token operator">/</span> 标注框展示样式\n    }\n<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>'},["code","// example: \nconst defaultLabels = [\n    {\n        key: '110',\n        select: false,\n        label: { // 标签名配置\n            name: '中国', // 标签名称\n            style: labelNameStyle // 标签样式\n        },\n        type: 'rect', // 矩形，支持'rect'， 'polygon'\n        texts: [{ // 该标注对象关联的文本集合，一般业务不需要\n            position: {x: 20, y: 20},\n            offset: {x: 0, y: 0},\n            maxWidth: 100,\n            text: '中国北京',\n            style: labelTextStyle\n        }],\n        markers: [{ // 该标注对象关联的标记集合，一般业务不需要\n            position: {x: 150, y: 100},\n            offset: {x: 0, y: 0},\n            events: {click: (p1, p2) => {\n                console.log('p1, p2', p1, p2);\n            }}\n        }],\n        points: [ // 该标注对象坐标信息【相对于图像左上角的坐标值】\n            {x: 100, y: 50},\n            {x: 200, y: 50},\n            {x: 200, y: 150},\n            {x: 100, y: 150}\n        ],\n        style: labelFeatureStyle // 标注框展示样式\n    }\n];"]],["h4","Text配置参数"],["table",["thead",["tr",["th","参数"],["th","说明"],["th","是否必填"],["th","类型"]]],["tbody",["tr",["td","position"],["td","文本框左上角位置{x:, y: }"],["td","是"],["td","object"]],["tr",["td","offset"],["td","文本偏移量{x:, y: }"],["td","否"],["td","object"]],["tr",["td","maxWidth"],["td","文本框最大宽"],["td","是"],["td","number"]],["tr",["td","text"],["td","文本框中文字"],["td","是"],["td","string"]],["tr",["td","style"],["td","文本样式"],["td","否"],["td","object"]]]],["pre",{lang:"js static",highlighted:'<span class="token operator">/</span><span class="token operator">/</span> example<span class="token punctuation">:</span> \n<span class="token keyword">const</span> defaultText <span class="token operator">=</span> { <span class="token operator">/</span><span class="token operator">/</span> 该标注对象关联的文本集合，一般业务不需要\n    position<span class="token punctuation">:</span> {x<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">20</span>}<span class="token punctuation">,</span>\n    offset<span class="token punctuation">:</span> {x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span>}<span class="token punctuation">,</span>\n    maxWidth<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    text<span class="token punctuation">:</span> <span class="token string">\'中国北京\'</span><span class="token punctuation">,</span>\n    style<span class="token punctuation">:</span> labelTextStyle\n}<span class="token comment" spellcheck="true">;</span>'},["code","// example: \nconst defaultText = { // 该标注对象关联的文本集合，一般业务不需要\n    position: {x: 20, y: 20},\n    offset: {x: 0, y: 0},\n    maxWidth: 100,\n    text: '中国北京',\n    style: labelTextStyle\n};"]],["h4","Marker配置参数"],["table",["thead",["tr",["th","参数"],["th","说明"],["th","是否必填"],["th","类型"]]],["tbody",["tr",["td","src"],["td","标记对象图标路径"],["td","是"],["td","string"]],["tr",["td","position"],["td","标记对象左上角位置{x:, y: }"],["td","是"],["td","object"]],["tr",["td","offset"],["td","标记对象偏移量{x:, y: }"],["td","否"],["td","object"]],["tr",["td","events"],["td","标记对象绑定事件"],["td","否"],["td","object"]]]],["pre",{lang:"js static",highlighted:'<span class="token operator">/</span><span class="token operator">/</span> example<span class="token punctuation">:</span> \n<span class="token keyword">const</span> defaultMarker <span class="token operator">=</span> { <span class="token operator">/</span><span class="token operator">/</span> 该标注对象关联的标记集合，一般业务不需要\n    src<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    position<span class="token punctuation">:</span> {x<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">100</span>}<span class="token punctuation">,</span>\n    offset<span class="token punctuation">:</span> {x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span>}<span class="token punctuation">,</span>\n    events<span class="token punctuation">:</span> {click<span class="token punctuation">:</span> <span class="token punctuation">(</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'p1, p2\'</span><span class="token punctuation">,</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }}\n}<span class="token comment" spellcheck="true">;</span>'},["code","// example: \nconst defaultMarker = { // 该标注对象关联的标记集合，一般业务不需要\n    src: '',\n    position: {x: 150, y: 100},\n    offset: {x: 0, y: 0},\n    events: {click: (p1, p2) => {\n        console.log('p1, p2', p1, p2);\n    }}\n};"]],["h4","onChange: (type: string, label: any, event: object, wxy: Point) => void 配置参数"],["table",["thead",["tr",["th","参数"],["th","说明"],["th","类型"]]],["tbody",["tr",["td","type"],["td","changeType类型，如'add'、'delete'、'update'等"],["td","string"]],["tr",["td","label"],["td","相应changeType对应的不同返回数据"],["td","any"]],["tr",["td","event"],["td","event事件对象，针对鼠标事件有效，目前仅针对'hover'"],["td","object"]],["tr",["td","wxy"],["td","针对鼠标事件有效，目前仅针对'hover', {x: , y: }，注意：此处是基于图片中心的坐标"],["td","object"]]]],["pre",{lang:"js static",highlighted:'<span class="token operator">/</span><span class="token operator">/</span> example<span class="token punctuation">:</span> \n<span class="token keyword">const</span> handleLabelChange <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span>operateType<span class="token punctuation">,</span> label<span class="token punctuation">,</span> evt<span class="token punctuation">,</span> wxy<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token operator">/</span><span class="token operator">/</span> 有些中间状态是不需要进行label重设\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'updating\'</span><span class="token punctuation">,</span> <span class="token string">\'boundsChanged\'</span><span class="token punctuation">,</span> <span class="token string">\'updateReset\'</span><span class="token punctuation">,</span> <span class="token string">\'hover\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> operateType<span class="token punctuation">)</span><span class="token punctuation">)</span> {\n        return<span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token operator">/</span><span class="token operator">/</span> 需要进行labels变化时，才进行setBizLabels，否则中间态持续执行，如果不停的setBizLabels会造成死循环\n    <span class="token function">setBizLabels</span><span class="token punctuation">(</span>preLabels <span class="token operator">=</span><span class="token operator">></span> {\n        let newLabels <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>preLabels<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token operator">/</span><span class="token operator">/</span> label添加\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>operateType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'add\'</span><span class="token punctuation">)</span> {\n            newLabels<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{\n                key<span class="token punctuation">:</span> `model<span class="token operator">-</span>label<span class="token operator">-</span>${_<span class="token punctuation">.</span><span class="token function">uniqueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span>}`<span class="token punctuation">,</span>\n                label<span class="token punctuation">:</span> {\n                    name<span class="token punctuation">:</span> <span class="token string">\'测试\'</span><span class="token punctuation">,</span>\n                    style<span class="token punctuation">:</span> labelNameStyle\n                }<span class="token punctuation">,</span>\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>label<span class="token punctuation">,</span>\n                style<span class="token punctuation">:</span> labelFeatureStyle\n            }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        <span class="token operator">/</span><span class="token operator">/</span> label删除<span class="token operator">/</span>更新<span class="token operator">/</span>选中\n        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'delete\'</span><span class="token punctuation">,</span> <span class="token string">\'update\'</span><span class="token punctuation">,</span> <span class="token string">\'select\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> operateType<span class="token punctuation">)</span><span class="token punctuation">)</span> {\n            <span class="token keyword">const</span> findIndex <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>newLabels<span class="token punctuation">,</span> {key<span class="token punctuation">:</span> label<span class="token punctuation">.</span>key}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>findIndex <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> {\n                newLabels<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>findIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                operateType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'update\'</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> newLabels<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                operateType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'select\'</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> newLabels<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>label<span class="token punctuation">,</span> <span class="token keyword">select</span><span class="token punctuation">:</span> <span class="token boolean">true</span>}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n        }\n        <span class="token operator">/</span><span class="token operator">/</span> 【【特别注意：特别注意：特别注意】】：reset 这一步目前必须，需要将label进行直接覆盖即可【作用：所有<span class="token keyword">select</span><span class="token punctuation">:</span> <span class="token boolean">false</span>】\n        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>operateType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'reset\'</span><span class="token punctuation">)</span> {\n            <span class="token keyword">const</span> formatLabels <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>newLabels<span class="token punctuation">,</span> label <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>label<span class="token punctuation">,</span> <span class="token keyword">select</span><span class="token punctuation">:</span> <span class="token boolean">false</span>}<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            newLabels <span class="token operator">=</span> formatLabels<span class="token comment" spellcheck="true">;</span>\n        }\n        return newLabels<span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code","// example: \nconst handleLabelChange = useCallback((operateType, label, evt, wxy) => {\n    // 有些中间状态是不需要进行label重设\n    if (_.includes(['updating', 'boundsChanged', 'updateReset', 'hover'], operateType)) {\n        return;\n    }\n    // 需要进行labels变化时，才进行setBizLabels，否则中间态持续执行，如果不停的setBizLabels会造成死循环\n    setBizLabels(preLabels => {\n        let newLabels = _.cloneDeep(preLabels);\n        // label添加\n        if (operateType === 'add') {\n            newLabels.push({\n                key: `model-label-${_.uniqueId()}`,\n                label: {\n                    name: '测试',\n                    style: labelNameStyle\n                },\n                ...label,\n                style: labelFeatureStyle\n            });\n        }\n        // label删除/更新/选中\n        else if (_.includes(['delete', 'update', 'select'], operateType)) {\n            const findIndex = _.findIndex(newLabels, {key: label.key});\n            if (findIndex >= 0) {\n                newLabels.splice(findIndex, 1);\n                operateType === 'update' && newLabels.push(label);\n                operateType === 'select' && newLabels.push({...label, select: true});\n            }\n        }\n        // 【【特别注意：特别注意：特别注意】】：reset 这一步目前必须，需要将label进行直接覆盖即可【作用：所有select: false】\n        else if (operateType === 'reset') {\n            const formatLabels = _.map(newLabels, label => ({...label, select: false}));\n            newLabels = formatLabels;\n        }\n        return newLabels;\n    });\n}, []);"]]]}}}]);