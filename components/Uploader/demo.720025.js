(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{1595:function(n,a,s){n.exports={content:[["p","基本用法。"]],meta:{order:0,title:"基本用法",filename:"docs/components/Uploader/demo/basic.md",id:"docs-components-Uploader-demo-basic"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>components<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Uploader<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> handleChange <span class="token operator">=</span> fileData <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fileData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Uploader</span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>components<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Uploader<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token parameter">fileData</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fileData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Uploader</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){s(0),s(7);var n,a=(n=s(0))&&n.__esModule?n:{default:n};var t=s(955).components.Uploader;return a.default.createElement(t,{onChange:function(n){console.log(n)}})}}},1596:function(n,a,s){n.exports={content:[["p","picture-card模式"]],meta:{order:0,title:"picture-card模式",filename:"docs/components/Uploader/demo/picture-card.md",id:"docs-components-Uploader-demo-picture-card"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>components<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Uploader<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> handleChange <span class="token operator">=</span> fileData <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>fileData<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Uploader</span>\n        <span class="token attr-name">multiple</span>\n        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">\'</span>picture-card<span class="token punctuation">\'</span></span>\n        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>\n        <span class="token attr-name">beforeUpload</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token boolean">false</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n    mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>components<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'baidu-aibp-react-common\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Uploader<span class="token punctuation">}</span> <span class="token operator">=</span> components<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token parameter">fileData</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setFileList</span><span class="token punctuation">(</span>fileData<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Uploader</span></span>\n        <span class="token attr-name">multiple</span>\n        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">\'</span>picture-card<span class="token punctuation">\'</span></span>\n        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>\n        <span class="token attr-name">beforeUpload</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token boolean">false</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n    mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){s(0),s(7);function n(a){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(a)}var a=function(a){if(a&&a.__esModule)return a;if(null===a||"object"!==n(a)&&"function"!=typeof a)return{default:a};var s=t();if(s&&s.has(a))return s.get(a);var p={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in a)if(Object.prototype.hasOwnProperty.call(a,e)){var c=o?Object.getOwnPropertyDescriptor(a,e):null;c&&(c.get||c.set)?Object.defineProperty(p,e,c):p[e]=a[e]}p.default=a,s&&s.set(a,p);return p}(s(0));function t(){if("function"!=typeof WeakMap)return null;var n=new WeakMap;return t=function(){return n},n}function p(n,a){(null==a||a>n.length)&&(a=n.length);for(var s=0,t=new Array(a);s<a;s++)t[s]=n[s];return t}var o,e,c=s(955).components.Uploader,u=(0,a.useState)(),l=(e=2,function(n){if(Array.isArray(n))return n}(o=u)||function(n,a){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var s=[],t=!0,p=!1,o=void 0;try{for(var e,c=n[Symbol.iterator]();!(t=(e=c.next()).done)&&(s.push(e.value),!a||s.length!==a);t=!0);}catch(n){p=!0,o=n}finally{try{t||null==c.return||c.return()}finally{if(p)throw o}}return s}}(o,e)||function(n,a){if(n){if("string"==typeof n)return p(n,a);var s=Object.prototype.toString.call(n).slice(8,-1);return"Object"===s&&n.constructor&&(s=n.constructor.name),"Map"===s||"Set"===s?Array.from(n):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?p(n,a):void 0}}(o,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=l[0],r=l[1];return a.default.createElement(c,{multiple:!0,listType:"picture-card",fileList:i,beforeUpload:function(){return!1},onChange:function(n){r(n.fileList)}})}}},736:function(n,a,s){n.exports={basic:s(1595),"picture-card":s(1596)}}}]);